{"version":3,"sources":["api/axios.ts","components/Button/index.tsx","components/Modal/index.tsx","components/Form/index.tsx","components/CreateDragon/index.tsx","components/EditDragon/index.tsx","pages/ListDragons/index.tsx","pages/Home/index.tsx","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","Button","children","onClick","type","Modal","handleClose","show","modalRef","className","ref","Form","onSubmit","dragonName","typeDragon","useState","nameInput","setNameInput","typeInput","setTypeInput","event","preventDefault","name","autoComplete","placeholder","value","onChange","target","CreateDragon","createDragon","showModal","setShowModal","formData","FormData","formObject","Object","fromEntries","getDragonJSON","EditDragon","dragon","editDragon","id","ListDragons","dragons","deleteDragon","confirmDelete","setConfirmDelete","dragonId","setDragonId","role","map","dragonIdToDelete","Home","setDragons","setLoading","sortDragonsByName","dgs","sort","a","b","toLowerCase","getDragons","get","data","toast","error","post","prevState","success","put","removeDragon","newDragons","index","findIndex","splice","delete","useEffect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5fc22c3.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://5c4b2a47aa8ee500142b4887.mockapi.io/api/v1/dragon',\n});\n\nexport default api;\n","import React from 'react';\nimport './styles.scss';\n\nconst Button = ({ children, onClick }: any) => (\n  <button onClick={onClick} type=\"submit\">\n    {children}\n  </button>\n);\n\nexport default Button;\n","/* eslint-disable import/extensions */\nimport React, { FC } from 'react';\nimport { MdClose } from 'react-icons/md';\n// eslint-disable-next-line import/no-unresolved\nimport Button from '../Button';\nimport './modal.scss';\n\ninterface IModal {\n  handleClose: ()=> void;\n  show: boolean;\n  children: any;\n  // eslint-disable-next-line react/require-default-props\n  modalRef?: any;\n}\n\nconst Modal: FC<IModal> = ({\n  handleClose, show = false, children, modalRef,\n}: IModal) => {\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div\n      data-testid=\"modal\"\n      className=\"modal display-block\"\n    >\n      <section ref={modalRef} className=\"modal-main\">\n        <Button className=\"closeButton\" type=\"button\" onClick={handleClose}>\n          <MdClose />\n        </Button>\n        {children}\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;\n","/* eslint-disable import/extensions */\n/* eslint-disable import/no-unresolved */\nimport React, { FC, useState } from 'react';\nimport { MdSave } from 'react-icons/md';\nimport Button from '../Button';\nimport './index.scss';\n\ntype FormProps = {\n  // eslint-disable-next-line no-unused-vars\n  onSubmit: (event: any) => void;\n  dragonName: string;\n  typeDragon: string;\n}\n\nconst Form: FC<FormProps> = ({\n  // eslint-disable-next-line no-unused-vars\n  onSubmit,\n  dragonName = '',\n  typeDragon = '',\n}: FormProps) => {\n  const [nameInput, setNameInput] = useState<string>(dragonName);\n  const [typeInput, setTypeInput] = useState<string>(typeDragon);\n\n  return (\n    <>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          onSubmit(event);\n          setNameInput('');\n          setTypeInput('');\n        }}\n      >\n        <div className=\"inputContainer\">\n          <input\n            className=\"inputText\"\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"off\"\n            placeholder=\"Nome\"\n            value={nameInput}\n            onChange={(event) => {\n              setNameInput(event.target.value);\n            }}\n          />\n        </div>\n        <div className=\"inputContainer\">\n          <input\n            type=\"text\"\n            className=\"inputText\"\n            name=\"type\"\n            autoComplete=\"off\"\n            placeholder=\"Tipo\"\n            value={typeInput}\n            onChange={(event) => {\n              event.preventDefault();\n              setTypeInput(event.target.value);\n            }}\n          />\n        </div>\n        <Button className=\"submitButton\" type=\"submit\">\n          <MdSave />\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable import/extensions */\n/* eslint-disable import/no-unresolved */\nimport React, { FC, useState } from 'react';\nimport { MdAdd } from 'react-icons/md';\nimport Modal from '../../components/Modal';\nimport Form from '../../components/Form';\nimport Button from '../../components/Button';\n\ninterface IDragon {\n  id?: number;\n  name: string;\n  type: string;\n  createdAt?: string;\n}\n\ninterface ICreateDragon {\n  createDragon: any;\n}\n\nconst CreateDragon: FC<ICreateDragon> = ({\n  createDragon,\n}: ICreateDragon) => {\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  const renderButton = () => (\n    <Button\n      onClick={() => {\n        setShowModal(true);\n      }}\n    >\n      <MdAdd />\n    </Button>\n  );\n\n  const getDragonJSON = (formObject: any): IDragon => ({\n    name: formObject.name,\n    type: formObject.type,\n  });\n\n  const onSubmit = (event: any) => {\n    const formData = new FormData(event.target);\n    const formObject = Object.fromEntries(formData);\n    createDragon(getDragonJSON(formObject));\n    setShowModal(false);\n  };\n\n  const renderModal = () => (\n    <Modal\n      show={showModal}\n      handleClose={() => setShowModal(false)}\n    >\n      <Form\n        dragonName=\"\"\n        typeDragon=\"\"\n        onSubmit={onSubmit}\n      />\n    </Modal>\n  );\n\n  return (\n    <>\n      <div className=\"container-dragons\">\n        {renderButton()}\n        {renderModal()}\n      </div>\n    </>\n  );\n};\n\nexport default CreateDragon;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable import/extensions */\n/* eslint-disable import/no-unresolved */\nimport React, { FC, useState } from 'react';\nimport { MdEdit } from 'react-icons/md';\nimport Modal from '../../components/Modal';\nimport Form from '../../components/Form';\n// import './styles.scss';\nimport Button from '../../components/Button';\n\ninterface IDragon {\n  id: number;\n  name: string;\n  type: string;\n  createdAt?: string;\n}\ninterface IEditDragon {\n  dragon: IDragon;\n  editDragon: (dragonId: Number, dragon: IDragon) => IDragon;\n}\n\nconst EditDragon: FC<IEditDragon> = ({\n  dragon,\n  editDragon,\n}: IEditDragon) => {\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  const renderButton = () => (\n    <Button\n      onClick={() => {\n        setShowModal(true);\n      }}\n    >\n      <MdEdit />\n    </Button>\n  );\n\n  const getDragonJSON = (formObject: any): any => ({\n    name: formObject.name,\n    type: formObject.type,\n  });\n\n  const onSubmit = (event: any) => {\n    const formData = new FormData(event.target);\n    const formObject = Object.fromEntries(formData);\n    editDragon(dragon.id, getDragonJSON(formObject));\n    setShowModal(false);\n  };\n\n  const renderModal = () => (\n    <Modal\n      show={showModal}\n      handleClose={() => setShowModal(false)}\n    >\n      <Form\n        dragonName={dragon?.name}\n        typeDragon={dragon?.type}\n        onSubmit={onSubmit}\n      />\n    </Modal>\n  );\n\n  return (\n    <>\n      <div className=\"container-dragons\">\n        {renderButton()}\n        {renderModal()}\n      </div>\n    </>\n  );\n};\n\nexport default EditDragon;\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable import/extensions */\nimport React, { FC, useState } from 'react';\nimport { MdCheck, MdClose } from 'react-icons/md';\nimport Button from '../../components/Button';\nimport Modal from '../../components/Modal';\nimport EditDragon from '../../components/EditDragon';\nimport './styles.scss';\n\ninterface IDragon {\n  id: number;\n  name: string;\n  createdAt: string;\n  type: string;\n}\n\ninterface IListDragons {\n  dragons: IDragon[];\n  deleteDragon: any;\n  editDragon: any;\n}\n\nconst ListDragons: FC<IListDragons> = ({\n  dragons,\n  deleteDragon,\n  editDragon,\n}: IListDragons) => {\n  const [confirmDelete, setConfirmDelete] = useState<boolean>(false);\n  const [dragonId, setDragonId] = useState<number>();\n\n  const deleteDragonAndCloseModal = () => {\n    deleteDragon(dragonId);\n    setConfirmDelete(false);\n  };\n\n  const setDragonToDelete = (dragonIdToDelete: number) => {\n    setDragonId(dragonIdToDelete);\n    setConfirmDelete(true);\n  };\n\n  const renderModalConfirmDelete = () => (\n    <Modal data-testid=\"delete-dragon-modal\" show={confirmDelete} handleClose={() => setConfirmDelete(false)}>\n      <div className=\"containerConfirmAction\">\n        <label>Deseja deletar esse dragão? </label>\n        <div className=\"containerDeleteButtons\">\n          <Button data-testid=\"delete-dragon-confirm-button\" onClick={() => deleteDragonAndCloseModal()}><MdCheck /></Button>\n          <Button\n            onClick={() => setConfirmDelete(false)}\n          >\n            <MdClose />\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n\n  const listDragons = () => dragons.map((dragon: IDragon) => (\n    <li className=\"listDragonItem\" key={dragon.id}>\n      <div>\n        <h3>{dragon.name}</h3>\n        <p>{dragon.type}</p>\n      </div>\n      <div className=\"actionsContainer\">\n        <EditDragon dragon={dragon} editDragon={editDragon} />\n        <Button className=\"deleteButton\" onClick={() => setDragonToDelete(dragon.id)}><MdClose /></Button>\n      </div>\n    </li>\n  ));\n\n  return (\n    <>\n      <div className=\"container-dragons\">\n        <ul role=\"tablist\" className=\"listDragons\">\n          {listDragons()}\n        </ul>\n      </div>\n      {renderModalConfirmDelete()}\n    </>\n  );\n};\n\nexport default ListDragons;\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\nimport React, { FC, useEffect, useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport api from '../../api/axios';\nimport CreateDragon from '../../components/CreateDragon';\nimport ListDragons from '../ListDragons';\nimport './styles.scss';\n\ninterface IDragon {\n  id: number;\n  name: string;\n  createdAt: string;\n  type: string;\n}\n\nconst Home: FC = () => {\n  const [dragons, setDragons] = useState<IDragon[]>([]);\n  // eslint-disable-next-line no-unused-vars\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const sortDragonsByName = (\n    dgs: IDragon[],\n  ): IDragon[] => dgs.sort((a: IDragon, b: IDragon) => (\n    // eslint-disable-next-line no-nested-ternary\n    a.name.toLowerCase()\n    > b.name.toLowerCase()\n      ? 1\n      : b.name.toLowerCase() > a.name.toLowerCase()\n        ? -1\n        : 0));\n\n  const getDragons = async () => {\n    try {\n      setLoading(true);\n      const { data } = await api.get('');\n      setDragons(sortDragonsByName(data));\n      setLoading(false);\n    } catch (error) {\n      toast.error('Erro ao carregar os dragões');\n      setDragons([]);\n    }\n  };\n\n  const createDragon = async (dragon: IDragon) => {\n    try {\n      setLoading(true);\n      const { data } = await api.post('', dragon);\n      setDragons((prevState) => sortDragonsByName([...prevState, data]));\n      setLoading(false);\n      toast.success('Dragão criado com sucesso');\n      return data;\n    } catch (error) {\n      toast.error('Erro ao criar o dragão');\n      return error;\n    }\n  };\n\n  const editDragon = async (dragonId: number, dragon: IDragon) => {\n    try {\n      setLoading(true);\n      const edited = await api.put(`/${dragonId}`, dragon);\n      // eslint-disable-next-line no-unused-expressions\n      edited\n        ? toast.success('Dragão editado com sucesso')\n        : toast.error('Erro ao editar o dragão');\n      getDragons();\n    } catch (error) {\n      toast.error('Erro ao editar o dragão');\n    }\n  };\n\n  const removeDragon = (dragonId: number) => {\n    const newDragons = dragons;\n    const index = newDragons.findIndex((dragon) => dragon.id === dragonId);\n    newDragons.splice(index, 1);\n    setDragons([...newDragons]);\n  };\n\n  const deleteDragon = async (dragonId: number) => {\n    try {\n      setLoading(true);\n      const deleted = await api.delete(`/${dragonId}`);\n      // eslint-disable-next-line no-unused-expressions\n      deleted\n        ? toast.success('Dragão deletado com sucesso')\n        : toast.error('Erro ao deletar o dragão');\n      removeDragon(dragonId);\n    } catch (error) {\n      toast.error('Erro ao deletar o dragão');\n    }\n  };\n\n  useEffect(() => {\n    getDragons();\n  }, []);\n\n  return (\n    <div className=\"homePageContainer\">\n      <h1>Dragões</h1>\n      <CreateDragon createDragon={createDragon} />\n      <ListDragons\n        dragons={dragons}\n        deleteDragon={deleteDragon}\n        editDragon={editDragon}\n      />\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Home;\n","/* eslint-disable import/extensions */\n/* eslint-disable import/no-unresolved */\nimport React from 'react';\n// import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport './styles/globalStyles.scss';\n\nfunction App() {\n  // const [token, setToken] = useState();\n  // implementar login, setToken no <Login />\n\n  if (false) {\n    return <Login />;\n  }\n\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}